@page "{OrderId:int}"

@model GadgetHub.Web.Pages.Orders.ViewModel

@using GadgetHub.Dtos.Distributors
@using GadgetHub.Dtos.Quotations
@using GadgetHub.Web.Pages.Orders

@{
    var distributorId = 2;
    var quotations = ViewData["quotations"] as List<QuotationsViewModel>;
}

<h2>Order Details - #@Model.OrderId</h2>

@if (Model.OrderDetails != null && Model.OrderDetails.Any())
{

    <div>
        <p><strong>Customer:</strong> @Model.OrderDetails[0].CustomerName</p>
        <p><strong>Email:</strong> @Model.OrderDetails[0].CustomerEmail</p>
        <p><strong>Order Date:</strong> @Model.OrderDetails[0].CreatedOn?.ToShortDateString()</p>
        <table class="table">
            <tr>
                <td class="fw-bold">Distributor</td>
                <td>@Model.OrderDetails[0].DistributorName</td>
            </tr>
            <tr>
                <td class="fw-bold">Distributor Confirmed on</td>
                <td>@(Model.OrderDetails[0].ConfirmedOn.HasValue ? Model.OrderDetails[0].ConfirmedOn.Value.ToString("dd MMM yyyy hh:mm tt") : "-")</td>
            </tr>
        </table>
        <p><strong>Status:</strong> 
            @if (Model.OrderDetails[0].OrderStatus == GadgetHub.Dtos.Enums.OrderStatus.Completed)
            {
                <span class="text-success fw-bold">@Model.OrderDetails[0].OrderStatus</span>
            }
            else
            {
                <span class="text-warning fw-bold">@Model.OrderDetails[0].OrderStatus</span>
            }
        </p>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Qty</th>
                <th> Price</th>
                <th>Total</th>
                @* <th class="bg-warning">Price</th>
                    <th class="bg-warning">Quantity</th> *@
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.OrderDetails[0].OrderItems.Count(); i++)
            {
                var item = Model.OrderDetails[0].OrderItems[i];
                @* var qou = quotations.Where(x => x.OrderItemId == item.Id).FirstOrDefault(); *@
                <tr>
                    <td>@item.ProductName</td>
                    <td>@item.Quantity</td>
                    <td>@item.Price</td>
                    <td>@(item.Quantity * item.Price)</td>
                    @* <td>
                            <input type="number" name="QuotationInputs[@i].DistributorId" value="@distributorId" />
                            <input type="number" name="QuotationInputs[@i].OrderId" value="@Model.OrderId" />
                            <input type="number" name="QuotationInputs[@i].OrderItemId" value="@item.Id" />
                            <input type="number" name="QuotationInputs[@i].Price" value="@qou?.Price ?? 0" />
                            <input type="number" name="QuotationInputs[@i].EstimatedDeliveryDays" value="5" />
                        </td>
                        <td>
                            <input type="number" name="QuotationInputs[@i].Quantity" value="@qou?.Quantity ?? 0" />
                        </td> *@
                </tr>
            }
        </tbody>
    </table>

    @if (quotations != null && quotations.Any())
    {
        <div class="row">
            @foreach (var quotation in quotations)
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm">
                        <!-- Card Header -->
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">@quotation.CompanyName</h5>
                            <small>Estimated Delivery: @(quotation.EstimatedDeliveryDateTime?.ToString("yyyy-MM-dd") ?? "N/A")</small>
                        </div>

                        <!-- Card Body -->
                        <div class="card-body">
                            <p><strong>Total Amount:</strong> @quotation.TotalAmount</p>

                            <!-- Wrap only this quotation in a form -->
                            <form method="post" asp-page-handler="ConfirmQuotation">
                                <input type="hidden" name="SelectedQuotationId" value="@quotation.Id" />
                                <input type="hidden" name="SelectedApiUrlId" value="@quotation.ApiUrl" />
                                <input type="hidden" name="SelectedDistributorName" value="@quotation.CompanyName" />
                                <input type="hidden" name="TotalAmount" value="@quotation.TotalAmount" />

                                @* Include line-level items as hidden inputs *@
                                @for (int i = 0; i < quotation.QuotationItems.Count; i++)
                                {
                                    var item = quotation.QuotationItems[i];
                                    <input type="hidden" name="QuotationItems[@i].ProductName" value="@item.ProductName" />
                                    <input type="hidden" name="QuotationItems[@i].Quantity" value="@item.Quantity" />
                                    <input type="hidden" name="QuotationItems[@i].Price" value="@item.Price" />
                                }
                                @if (!Model.OrderDetails[0].QuotationId.HasValue)
                                {
                                    <button type="submit" class="btn btn-sm btn-success">Confirm Order</button>
                                }
                            </form>

                            <!-- Display line-level items -->
                            <table class="table table-sm table-bordered mt-3">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Qty</th>
                                        <th>Price</th>
                                        <th>Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in quotation.QuotationItems)
                                    {
                                        <tr>
                                            <td>@item.ProductName</td>
                                            <td>@item.Quantity</td>
                                            <td>@item.Price</td>
                                            <td>@(item.Quantity * item.Price)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @if (Model.OrderDetails[0].QuotationId.HasValue)
    {
        <h1 class="text-success text-center">This order is confirmed to @Model.OrderDetails[0].DistributorName !</h1>
    }

}
else
{
    <p>No order details available.</p>
}
