@page "{id:int}"
@using GadgetHub.Web.Pages.Orders
@model GadgetHub.Web.Pages.Orders.DetailsModel

<h2 class="mb-3">Order Details - #@Model.OrderDetails.OrderId</h2>

@if (Model.OrderDetails == null)
{
    <div class="alert alert-danger">Order details not found.</div>
}
else
{
    <div class="mb-3">
        <p><strong>Customer:</strong> @Model.OrderDetails.CustomerName</p>
        <p><strong>Email:</strong> @Model.OrderDetails.CustomerEmail</p>
        <p>
            <strong>Order Date:</strong>@(Model.OrderDetails.CreatedOn.HasValue
                    ? Model.OrderDetails.CreatedOn.Value.ToString("yyyy-MM-dd")
                : "N/A")
    </p>
    <p>
        <strong>Status:</strong>
        @switch (Model.OrderDetails.OrderStatus)
            {
                case 1:
                    <span class="badge bg-warning">Pending</span>
                    ; break;
                case 2:

                    <span class="badge bg-info">Processing</span>
                    ; break;
                case 3:

                    <span class="badge bg-success">Completed</span>
                    ; break;
                default:

                    <span class="badge bg-secondary">Unknown</span>
                    ; break;
            }
        </p>
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product</th>
                <th>Qty</th>
                <th>Unit Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderDetails.OrderItems)
            {
                <tr>
                    <td>@item.ProductName</td>
                    <td>@item.Quantity</td>
                    <td>@item.Price.ToString("C")</td>
                    <td>@(item.Price* item.Quantity).ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>

    <p class="mt-3"><strong>Grand Total:</strong> @Model.OrderDetails.TotalAmount</p>
}
